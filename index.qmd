---
title: "The impact of monetary policy on the real economy and the stock market: The case of Australia"
author: "Pun Suparattanapinan"

execute:
  echo: false
  
bibliography: references.bib
---

>
>
> **Keywords.** Structural VAR, SVAR, monetary policy, stock market, economic impact, impulse response function, Bayesian, cash rate, impulse response function

# Introduction

This study aims to explore the dynamic impact of monetary policy on the real economy in Australia, specifically focusing on economic growth, inflation, and employment. How does the real economy respond? What is the magnitude and the duration of change? The stock market price is included and can be considered a leading indicator of the real economy.

According to Economic theory, the transmission mechanism of monetary policy to the real economy takes time, as it does not have a fully immediate effect, but it involves some delays. @BrischettoVoss1999 find that the contractionary of monetary policy in Australia leads to a decrease in output level between 5 and 15 quarters after the contraction. The price level also gradually falls with some delay with maximum effect, and there is an indication that the effect tends to be permanent. @Mojon2001 also investigate the effect of monetary policy across 10 euro area countries and find that a contractionary monetary policy shock leads to a temporary fall in GDP that peaks typically around four quarters after the shock and a gradual decrease in the price level.

On the other hand, @Bjornland2009 suggest that, due to the availability of information in financial market, the monetary policy and stock market have simultaneous effects. They also find that real stock prices immediately fall by seven to nine percent due to a monetary policy shock that raises the federal funds rate by 100 basis points. Similarly, @Ioannidis2008 find that the majority of OECD countries under study, periods of tight money are associated with contemporaneous declines in stock market value and also decreases expected stock returns. Additionally, according to @Bjornland2009, the changes in asset price, particularly stock price, ultimately impact the economic growth by increasing household spending based on their wealth and encouraging investment through the Tobin Q effect. The asset prices also play a role in firmâ€™s ability to fund operations through credit channel. Hence, policymakers are motivated to track the asset price as short-run indicators.

Understanding insights of these dynamic impacts within the macroeconomy, including the magnitude and duration of impacts, enables the policymakers to precisely predict the outcomes on real economy that might occur after changing the new cash target rate.


# Data

The variables in this study include the cash rate target **_(cashrate)_**, which indicates the monetary policy. GDP (in real terms), inflation **_(inflation)_**, and the unemployment rate **_(unemprate)_** are included to measure the real economy. For the stock market, the author uses the All Ordinaries index (AORD) as a representative. The AORD is the market-weighted index and includes about 500 companies from the Australian Stock Exchange. Finally, total government expenditure is included to control for fiscal policy, which might also affect the economy besides monetary policy. The data is collected from the Reserve Bank of Australia (RBA), Australian Bureau of Statistics (ABS), and Yahoo Finance. The dataset spans from 1990 Q1 to 2023 Q4, comprising 136 observations. [Figure 1: time series plots (raw data)] represents the raw data time series of these 6 variables.

<br>


```{r download the data}
#| message: false
#| warning: false

  # Unemployment rate (02/1978 - 02/2024) monthly data
unemp_rate_raw <- readrba::read_rba(series_id = "GLFSURSA")
unemp_rate <- unemp_rate_raw[, c("date", "value")]
unemp_rate <- xts::xts(unemp_rate$value,unemp_rate$date)
    # we fix the period (1990Q1 - 2023Q4)    
unemp_rate <- xts::to.quarterly(unemp_rate, OHLC = FALSE)
unemprate <- unemp_rate[zoo::index(unemp_rate) >= "1990 Q1" & zoo::index(unemp_rate) < "2024 Q1"]

  # GDP deflator (09/1959 - 12/2023) quarterly
gdp_df_raw <- readabs::read_abs(series_id = "A2303730T")
gdp_df <- gdp_df_raw[, c("date", "value")]
gdp_df$quarter <- zoo::as.yearqtr(gdp_df$date)
gdp_df <- xts::xts(gdp_df$value,gdp_df$quarter)
    # we fix the period (1990Q1 - 2023Q4)  
gdp_df <- gdp_df[zoo::index(gdp_df) >= "1989 Q4" & zoo::index(gdp_df) < "2024 Q1"]

  # Real GDP seasonal adjusted
real_gdp_raw <- readrba::read_rba(series_id = "GGDPCVGDP")
real_gdp <- real_gdp_raw[, c("date", "value")]
real_gdp$quarter <- zoo::as.yearqtr(real_gdp$date)
real_gdp <- xts::xts(real_gdp$value,real_gdp$quarter)
    # we fix the period (1990Q1 - 2023Q4)   
realgdp <- real_gdp[zoo::index(real_gdp) >= "1990 Q1" & zoo::index(real_gdp) < "2024 Q1"]
realgdp <- realgdp/1000
    # calculate gdp growth
realgdp_temp <- real_gdp[zoo::index(real_gdp) >= "1989 Q4" & zoo::index(real_gdp) < "2024 Q1"]
drealgdp <- 100*diff(log(realgdp_temp))
drealgdp <- drealgdp[2:137]

  # Cash target rate (01/1990 - 03/2024) daily
i_raw <- readrba::read_rba(series_id = "FIRMMCRTD")
i <- i_raw[, c("date", "value")]
i <- xts::xts(i$value,i$date)
    # Convert to quarter and fix the period (1990Q1 - 2023Q4)
cashrate <- xts::to.quarterly(i, OHLC = FALSE)[1:136]


  # CPI (06/1922 - 12/2023) quarterly
CPI_raw <- readrba::read_rba(series_id = "GCPIAG")
CPI <- CPI_raw[, c("date", "value")]
CPI$quarter <- zoo::as.yearqtr(CPI$date)
CPI <- xts::xts(CPI$value,CPI$quarter)
    # we fix the period (1989Q4 - 2023Q4)
CPI <- CPI[zoo::index(CPI) >= "1989 Q4" & zoo::index(CPI) < "2024 Q1"]
  # Inflation (Diff CPI) (1990Q1 - 2023Q4)
inf <- 100*diff(log(CPI))
inflation <- inf[2:137]

  # Stock market (01/1985 - 03/2024) monthly
link_AORD <- "https://query1.finance.yahoo.com/v7/finance/download/%5EAORD?period1=460339200&period2=1711843200&interval=1mo&events=history&includeAdjustedClose=true"
AORD_raw <- read.csv(link_AORD)
AORD <- AORD_raw[, c("Date", "Close")]
AORD <- xts::xts(AORD$Close,as.Date(AORD$Date))
    # Convert to quarter and fix the period (1990Q1 - 2023Q4) and convert to real term
AORD <- xts::to.quarterly(AORD, OHLC = FALSE)
stockprice <- AORD[zoo::index(AORD) >= "1990 Q1" & zoo::index(AORD) < "2024 Q1" ]
    # calculate the growth of stock price
stockprice_temp <- AORD[zoo::index(AORD) >= "1989 Q4" & zoo::index(AORD) < "2024 Q1" ]
stockprice_r <- stockprice_temp / gdp_df
dstockprice <- 100*diff(log(stockprice_r))
dstockprice <- dstockprice[2:137]

  # Government spending (Final consumption national + state and local + seasonal adj) (09/1959 - 12/2023) quarterly
gov_raw <- readabs::read_abs(series_id = "A2304036K")
gov <- gov_raw[, c("date", "value")]
gov$quarter <- zoo::as.yearqtr(gov$date)
gov <- xts::xts(gov$value,gov$quarter)
    # we fix the period (1990Q1 - 2023Q4) and convert to real term
gov_exp <- gov[zoo::index(gov) >= "1990 Q1" & zoo::index(gov) < "2024 Q1"]

    # calculate the growth of government spending
gov_exp_temp <- gov[zoo::index(gov) >= "1989 Q4" & zoo::index(gov) < "2024 Q1"]
gov_exp_r <- gov_exp_temp/(gdp_df*1000)
dgovexp <- 100*diff(log(gov_exp_r))
dgovexp <- dgovexp[2:137]
```


```{r plotting the raw data}

time <- seq(as.Date("1990-01-01"), by = "quarter", length.out = 136)
par(mfrow = c(3, 2), oma = c(0, 0, 2, 0))
par(mar=c(3,3,2,2))

plot(time, realgdp, type = "l", lwd = 2 ,col = "grey27", main = "Real gdp ($billion)")
plot(time, cashrate, type = "l", lwd = 2 ,col = "grey27", main = "Cash rate target (%)")
plot(time, inflation, type = "l", lwd = 2 ,col = "grey27", main = "Inflation (%)")
plot(time, unemprate, type = "l", lwd = 2 ,col = "grey27", main = "Unemployment rate (%)")
plot(time, stockprice, type = "l", lwd = 2 , col = "grey27", main = "Stock market index (All ordinaries)")
plot(time, gov_exp, type = "l", lwd = 2 ,col = "grey27", main = " Total government expenditure ($ billion)")

#mtext("Plot of variables (before transforming)", outer = TRUE, cex = 1.1, font = 2, col = "darkslateblue")

```
<center> 
##### Figure 1: time series plots (raw data) 
</center>

<br>

The author transforms the data in manner that aligns with the purpose of study. The AORD and total government expenditure are adjusted to real terms using the GDP deflator. After that, the author transforms 3 variables that are in real terms, namely GDP, AORD, and total government expenditure, to represent growth by taking the difference of logarithms, denoted by **_drealgdp_**, **_dstockprice_**, and **_dgovexp_** respectively. [Figure 2: time series plots (transformed data)] represents the transformed data, which will be analyzed further.

<br>

```{r Plotting the data}

time <- seq(as.Date("1990-01-01"), by = "quarter", length.out = 136)


par(mfrow = c(3, 2), oma = c(0, 0, 2, 0))

options(repr.plot.width=20, repr.plot.height=50)
par(mar=c(3,3,2,2))

plot(time, drealgdp, type = "l", lwd = 2 ,col = "grey27", main = "Real gdp growth (%)")
plot(time, cashrate, type = "l", lwd = 2 ,col = "grey27", main = "Cash rate target (%)")
plot(time, inflation, type = "l", lwd = 2 ,col = "grey27", main = "Inflation (%)")
plot(time, unemprate, type = "l", lwd = 2 ,col = "grey27", main = "Unemployment rate (%)")
plot(time, dstockprice, type = "l", lwd = 2 , col = "grey27", main = "Real stock market index price growth (%)")
plot(time, dgovexp, type = "l", lwd = 2 ,col = "grey27", main = "Real total government expenditure growth (%)")

#mtext("Plot of 6 variables (after transforming)", outer = TRUE, cex = 1.1, font = 2, col = "darkslateblue")
```
<center> 
##### Figure 2: time series plots (transformed data) 
</center>

<br>

The statistics summary of variables from 1990 Q1 to 2023 Q4 is shown in Table 1.


```{r statistical summary}
data = data.frame(cashrate, drealgdp, inflation, unemprate, dstockprice, dgovexp)

summary_stats <- function(x) {
  c(
    N = length(x),
    Mean = round(mean(x, na.rm = TRUE),3),
    St.Dev. = round(sd(x, na.rm = TRUE),3),
    Min = round(min(x, na.rm = TRUE),3),
    Max = round(max(x, na.rm = TRUE),3)
  )
}

result <- sapply(data, summary_stats)

result_df <- as.data.frame(t(result))
colnames(result_df) <- c("N", "Mean", "St.Dev.", "Min", "Max")
rownames(result_df) <- names(data)

#options(width = 200)

knitr::kable(result_df, caption = "Table 1: Summary statistics")
```

# Preliminary Results
### The autocorrelation and partial autocorrelation
In this section, the autocorrelation and partial autocorrelation analyses are used to detect patterns and check the randomness of time series. [Figure 3: ACF plots] show the autocorrelation remains in _cashrate_ and _unemprate_ even after 5 years. The acf of _inflation_ also indicates the significant autocorrelation in first quarter lag, whereas all other variables do not exhibit significant lags. However, in _drealgdp_, a spike exceeds the 95% confidence interval in fifth quarter lag; nevertheless, this might occur due to a type I error.



```{r ACF plot}
par(mfrow = c(3, 2), oma = c(0, 0, 2, 0))
par(mar=c(4,4,4,2))
acf(cashrate, main = "cashrate")
acf(drealgdp, main = "drealgdp")
acf(inflation, main = "inflation")
acf(unemprate, main = "unemprate")
acf(dstockprice, main = "dstockprice")
acf(dgovexp, main = "dgovexp")

```
<center> 
##### Figure 3: ACF plots
</center>
<br>

For the pacf in [Figure 4: PACF plots], it is observed that there are significant spike for some lags for all variables except _dstockprice_.
```{r PACF plot}
par(mfrow = c(3, 2), oma = c(0, 0, 2, 0))
par(mar=c(4,4,4,2))
pacf(cashrate, main = "cashrate")
pacf(drealgdp, main = "drealgdp")
pacf(inflation, main = "inflation")
pacf(unemprate, main = "unemprate")
pacf(dstockprice, main = "dstockprice")
pacf(dgovexp, main = "dgovexp")
```

<center> 
##### Figure 4: PACF plots
</center>
<br>

### The unit root test
In this section, the Augmented Dickey-Fuller Test (ADF Test) is used to test for the stationarity assumption. The null hypothesis is that the time series data has a unit root (non-stationary). The results are shown in table 2. All of variables except _unemprate_, can be rejected on the null hypothesis which indicate that these variables are stationary. 

```{r ADF test}
#| echo: false
#| message: false
#| warning: false
adf_matrix <- as.data.frame(matrix(nrow=6,ncol=3,NA))
rownames(adf_matrix) <- colnames(data)
colnames(adf_matrix) <- c("Dickey-Fuller","Lag order", "p-value")

for (i in seq_along(data)) {
  result <- tseries::adf.test(data[[i]])
  
  # Store the results in the 'adf' matrix
  adf_matrix[i, 1] <- round(as.numeric(result[1]), 2)  # ADF statistic
  adf_matrix[i, 2] <- result[2]  # p-value
  adf_matrix[i, 3] <- round(as.numeric(result[4]), 2)  # critical values
}

knitr::kable(adf_matrix, caption = "Table 2: ADF test")
```
Then, take the first difference to all variables and rerun the ADF test. The results are shown in table 3. It is reasonable to conclude that _unemprate_ is integrated of order 1, while the others are integrated of order 0, or in other words, they are stationary. 


```{r create the first difference data}
#| echo: false
#| message: false
#| warning: false
#variables <- c("cashrate", "drealgdp", "inflation", "unemprate", "dstockprice", "dgovexp")

data_diff1 <- as.data.frame(lapply(colnames(data), function(x) na.omit(diff(get(x)))))

colnames(data_diff1) <- paste0("d", (colnames(data)))

```



```{r ADF test on first diff}
#| echo: false
#| message: false
#| warning: false
adf_diff_matrix <- as.data.frame(matrix(nrow=6,ncol=3,NA))
rownames(adf_diff_matrix) <- colnames(data_diff1)
colnames(adf_diff_matrix) <- c("Dickey-Fuller","Lag order", "p-value")

for (i in seq_along(data)) {
  result_diff <- tseries::adf.test(data_diff1[[i]])
  
  # Store the results in the 'adf' matrix
  adf_diff_matrix[i, 1] <- round(as.numeric(result_diff[1]), 2)  # ADF statistic
  adf_diff_matrix[i, 2] <- result_diff[2]  # p-value
  adf_diff_matrix[i, 3] <- round(as.numeric(result_diff[4]), 2)  # critical values
}

knitr::kable(adf_diff_matrix, caption = "Table 3: ADF test on first difference")
```




# Methodology
In this section, the model that this study use to capture the structural relationship between real economy variables and the stock price is introduced. 
The author use Structural Vector Autoregression (SVAR) model which comprises of 6 variables on the same integrated order, _cashrate_, _drealgdp_, _inflation_, _dunemprate_, _dstockprice_, and _dgovexp_. Subsequently, the model will be used to analyze the impulse responses.



The **SVAR model** can be shown as follows.
```{=tex}
\begin{align}
B_0y_t &= b_0 + \sum_{i=1}^{p}B_{i}y_{t-i}+u_t  \\
u_t|y_{t-1}&\sim iid(0_N,I_N)
\end{align}
```
where :

$y_{t}$ is $N\times1$ vector of endogenous variables at time t.

$B_0$ is $N\times N$ structural matrix which captures the contemporaneous relationships between variables.

$u_t$ is $N\times1$ vector of conditionally on $y_{t-1}$ orthogonal or independent structural shocks. 

<br>

Specifically, $y_{t}$ contains 6 variables as follows.
$$
y_t = \begin{pmatrix}
\text{cashrate} \\
\text{drealgdp} \\
\text{inflation} \\
\text{dunemprate} \\
\text{dstockprice} \\
\text{dgovexp}
\end{pmatrix}
$$


The **reduced form** can be shown as follows.

```{=tex}
\begin{align}
y_t &= \mu_0 + \sum_{i=1}^{p}A_{i}y_{t-i}+\epsilon_t \\
\epsilon_t|y_{t-1} &\sim iid \mathcal{N}(0_N,\Sigma)
\end{align}
```

where :

$A_i$ is $N\times N$ matrix of autoregressive slope parameters

$\mu_0$ is $N\times1$ vector of constant terms

$\epsilon_t$ is $N\times1$ vector of error terms - a multivariate white noise process

$\Sigma$ is $N\times N$ covariance matrix of the error term






## References {.unnumbered}
